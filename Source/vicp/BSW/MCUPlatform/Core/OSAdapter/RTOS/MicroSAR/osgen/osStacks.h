/* file: D:/AutoSar generated code/osStacks.h */
/* automatically generated by genRH850.exe, Version: 1.06 */
/* Configuration file: D:/PROJECT/VICP/OIL/OIL CFG/BASELINE_EXTEND_EVENT_NOOSTM.oil */
/* Generation time: Mon May 16 10:20:54 2016 */
/* Unlimited license CBD1500834 for Huizhou Desay SV Automotive, Product License, Instrument Panel */
/* Implementation: RH850_D1M */
/* Version of general code: 9.01.04 */
/* MISRA RULE 19.15 not violated: The QAC-Tool states a violation of rule 19.15 with message 0883,
 * but there is a double include prevention and therefore the message is considered to be wrong. */
#if ! defined __OSSTACKS_H__   /* PRQA S 0883 EOF */ 
#define __OSSTACKS_H__
#if defined USE_QUOTE_INCLUDES
 #include "vrm.h"
#else
 #include <vrm.h>
#endif

#define osdVrmGenMajRelNum 1
#define osdVrmGenMinRelNum 6
#if defined USE_QUOTE_INCLUDES
 #include "vrm.h"
#else
 #include <vrm.h>
#endif

#if defined USE_QUOTE_INCLUDES
 #include "osek.h"
#else
 #include <osek.h>
#endif

#define osdSystemSwitchHigh_BOT osBottomOfStack(osTaskStack0)
#define osdSystemSwitchHigh_TOP osAssignStack(osTaskStack0)

#define osdFastCyclic_BOT osBottomOfStack(osTaskStack1)
#define osdFastCyclic_TOP osAssignStack(osTaskStack1)

#define osdEventTask_BOT osBottomOfStack(osTaskStack2)
#define osdEventTask_TOP osAssignStack(osTaskStack2)

#define osdSlowCyclic_BOT osBottomOfStack(osTaskStack3)
#define osdSlowCyclic_TOP osAssignStack(osTaskStack3)

#define osdSlowJob_BOT osBottomOfStack(osTaskStack4)
#define osdSlowJob_TOP osAssignStack(osTaskStack4)

#define osdSystemSwitchLow_BOT osBottomOfStack(osTaskStack5)
#define osdSystemSwitchLow_TOP osAssignStack(osTaskStack5)

#define osdResetTask_BOT osBottomOfStack(osTaskStack6)
#define osdResetTask_TOP osAssignStack(osTaskStack6)

#define osdSystemStack_c0_BOT osBottomOfStack(osSystemStack_c0)
#define osdSystemStack_c0_TOP osAssignStack(osSystemStack_c0)

#define osdISR_CAN0ERR_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_CAN0ERR_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_CAN0REC_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_CAN0REC_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_CAN0TRX_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_CAN0TRX_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_CANGERR_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_CANGERR_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_CANGRECC_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_CANGRECC_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_TAUB0I0_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_TAUB0I0_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_TAUD0I0_BOT osBottomOfStack(osIntStackLevel0_c0)
#define osdISR_TAUD0I0_TOP osAssignStack(osIntStackLevel0_c0)

#define osdISR_TAUJ0I0_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_TAUJ0I0_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_TAUJ1I0_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_TAUJ1I0_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_WDTA0_BOT osBottomOfStack(osIntStackLevel1_c0)
#define osdISR_WDTA0_TOP osAssignStack(osIntStackLevel1_c0)

#define osdISR_ADD_BOT osBottomOfStack(osIntStackLevel1_c0)		// for added ISR
#define osdISR_ADD_TOP osAssignStack(osIntStackLevel1_c0)

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osIntStackLevel0_c0 [50]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osIntStackLevel1_c0 [150];	//change to 1K 	 /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osSystemStack_c0[300];		// [150]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osTaskStack0 [300];		//[75]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osTaskStack1 [300]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osTaskStack2 [300]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osTaskStack3 [300]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osTaskStack4 [300]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osTaskStack5 [300];		//[75]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#pragma ghs startdata
#pragma alignvar(4)
/*
 * MISRA RULE 5.1 VIOLATION: The names of the stacks are combined
 * from a prefix, the application name and a
 * sequential number. Depending on the application name, this might
 * result in a name with more than 31 characters, differing only in the
 * sequential number at the end (777).
 */
osqStack1 extern osqStack2 osStackDataType osqStack3 osTaskStack6 [75]; /* PRQA S 0777 */ /* PRQA S 4152 */ 
#pragma ghs enddata

#endif /* ! defined __OSSTACKS_H__ */
